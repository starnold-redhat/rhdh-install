---
# TODOs
# Need to create an app in gitlab, and get the secret info and codes
# Need to inject that into the backstage client in rhsso-sso
# Need to read the RHSSO client secret info, and then inject into the backstage secret
# Need to work out how to add users

- name: Retrieve keycloak client id and secret
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: keycloak-client-secret-backstage
    namespace: rhsso
    wait: true
    wait_timeout: 300
  register: sso_secret
  failed_when: sso_secret.resources[0].data.CLIENT_ID| length == 0

- name: Set keycloak client_id
  set_fact:
    keycloak_client_id: '{{ sso_secret.resources[0].data.CLIENT_ID }}'

- name: Set keycloak client secret
  set_fact:
    keycloak_client_secret: '{{ sso_secret.resources[0].data.CLIENT_SECRET }}'

- name: Print client secret
  debug:
    var: keycloak_client_secret

- name: Set keycloak metadata url
  set_fact:
    keycloak_metadata_url: 'https://keycloak-rhsso.{{ OCP_BASE }}/auth/realms/backstage'

# retrieve gitops admin password
- name: Retrieve gitops admin password
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: openshift-gitops-cluster
    namespace: openshift-gitops
    wait: true
    wait_timeout: 300
  register: gitops_secret

- name: Setup k8s service account for rhdh access
  ansible.builtin.shell: |
    oc create sa rhdhaccess -n backstage
    oc adm policy add-cluster-role-to-user cluster-admin -z rhdhaccess
  
- name: Setup k8s service account for rhdh access
  ansible.builtin.shell: |
    oc create token rhdhaccess -n backstage --duration=$((365*24))h
  register: rhdhaccess_token_output

- name: Set k8s service account token for rhdh access
  ansible.builtin.set_fact:
    rhdhaccess_token: '{{ rhdhaccess_token_output.stdout }}'

- name: Set gitops admin password
  set_fact:
    gitops_password: '{{ gitops_secret.resources[0].data["admin.password"] }}'

# tasks file for configure-backstage
- name: Install backstage app config
  kubernetes.core.k8s:
    state: present
    resource_definition: "{{ lookup('template', 'app_config_rhdh.yaml.j2') }}"

- name: Install backstage secrets
  kubernetes.core.k8s:
    state: present
    resource_definition: "{{ lookup('template', 'rhdh-secrets.yaml.j2') }}"

- name: Install dynamic plugins config map
  kubernetes.core.k8s:
    state: present
    src: dynamic_plugins_rhdh_cm.yaml

- name: Install rhdh_custom_config config map
  kubernetes.core.k8s:
    state: present
    src: rhdh_custom_config.yaml

- name: Install backstage
  kubernetes.core.k8s:
    state: present
    src: developer_hub.yaml

- name: Wait for Backstage to start
  kubernetes.core.k8s_info:
    namespace: backstage
    kind: pod
    label_selectors:
      - rhdh.redhat.com/app = backstage-developer-hub
    wait: true
    wait_timeout: 300
    wait_condition:
      type: Ready
      status: true